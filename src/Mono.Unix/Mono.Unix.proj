<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <NativeConfiguration>$(Configuration.ToLowerInvariant())</NativeConfiguration>
    <BuildDirTop>../../artifacts</BuildDirTop>

    <BeforePack>
      _GetNativeLibraries;
      $(BeforePack);
    </BeforePack>
  </PropertyGroup>

  <PropertyGroup>
    <_LinuxLibraryPrefix>lib</_LinuxLibraryPrefix>
    <_LinuxSharedNativeLibrarySuffix>so</_LinuxSharedNativeLibrarySuffix>
    <_LinuxStaticNativeLibrarySuffix>a</_LinuxStaticNativeLibrarySuffix>
    <_LinuxDebugNativeLibrarySuffix>$(_LinuxSharedNativeLibrarySuffix).debug</_LinuxDebugNativeLibrarySuffix>
    <_LinuxHasDebugNativeLibrary>true</_LinuxHasDebugNativeLibrary>
  </PropertyGroup>

  <PropertyGroup>
    <_DarwinLibraryPrefix>lib</_DarwinLibraryPrefix>
    <_DarwinSharedNativeLibrarySuffix>dylib</_DarwinSharedNativeLibrarySuffix>
    <_DarwinStaticNativeLibrarySuffix>a</_DarwinStaticNativeLibrarySuffix>
    <_DarwinDebugNativeLibrarySuffix></_DarwinDebugNativeLibrarySuffix>
    <_DarwinHasDebugNativeLibrary>false</_DarwinHasDebugNativeLibrary>
  </PropertyGroup>

  <ItemGroup>
    <_NativeLib Include="host-linux" Condition=" '$([MSBuild]::IsOSPlatform(Linux))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/linux-x64/native</PackagePath>
      <LibraryPrefix>$(_LinuxLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_LinuxSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_LinuxStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_LinuxDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_LinuxHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="host-darwin-x64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/osx-x64/native</PackagePath>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="host-darwin-arm64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/osx-arm64/native</PackagePath>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="android-arm32" Condition=" '$([MSBuild]::IsOSPlatform(Linux))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/android-arm/native</PackagePath>
      <LibraryPrefix>$(_LinuxLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_LinuxSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_LinuxStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_LinuxDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_LinuxHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="android-arm64" Condition=" '$([MSBuild]::IsOSPlatform(Linux))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/android-arm64/native</PackagePath>
      <LibraryPrefix>$(_LinuxLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_LinuxSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_LinuxStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_LinuxDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_LinuxHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="android-x86" Condition=" '$([MSBuild]::IsOSPlatform(Linux))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/android-x86/native</PackagePath>
      <LibraryPrefix>$(_LinuxLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_LinuxSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_LinuxStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_LinuxDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_LinuxHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="android-x64" Condition=" '$([MSBuild]::IsOSPlatform(Linux))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/android-x64/native</PackagePath>
      <LibraryPrefix>$(_LinuxLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_LinuxSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_LinuxStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_LinuxDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_LinuxHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="catalyst-arm64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true'">
      <PackagePath>runtimes/maccatalyst-arm64/native</PackagePath>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="catalyst-x64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/maccatalyst-x64/native</PackagePath>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="ios-arm64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/ios-arm64/native</PackagePath>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="ios-armv7" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/ios-arm/native</PackagePath>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="ios-armv7s" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/ios-armv7s/native</PackagePath> <!-- TODO: this needs to be a fat binary -->
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="ios-simarm64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/iossimulator-arm64/native</PackagePath>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="ios-simx64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/iossimulator-x64/native</PackagePath>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="tvos-arm64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/tvos-arm64/native</PackagePath>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="tvos-simx64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <PackagePath>runtimes/tvossimulator-x64/native</PackagePath>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>
  </ItemGroup>

  <Target Name="_GetNativeLibraries">
    <ItemGroup>
      <Content Include="$(BuildDirTop)/%(_NativeLib.Identity)-$(NativeConfiguration)/lib/%(_NativeLib.LibraryPrefix)Mono.Unix.%(_NativeLib.SharedSuffix)"
               Condition=" '%(_NativeLib.HasSharedLibrary)' == 'true' ">
        <PackagePath>%(_NativeLib.PackagePath)</PackagePath>
      </Content>

      <Content Include="$(BuildDirTop)/%(_NativeLib.Identity)-$(NativeConfiguration)/lib/%(_NativeLib.LibraryPrefix)Mono.Unix.%(_NativeLib.DebugSuffix)"
               Condition=" '%(_NativeLib.HasDebugLibrary)' == 'true' ">
        <PackagePath>%(_NativeLib.PackagePath)</PackagePath>
      </Content>

      <Content Include="$(BuildDirTop)/%(_NativeLib.Identity)-$(NativeConfiguration)/lib/%(_NativeLib.LibraryPrefix)Mono.Unix.%(_NativeLib.StaticSuffix)">
        <PackagePath>%(_NativeLib.PackagePath)</PackagePath>
      </Content>
    </ItemGroup>
  </Target>
</Project>
