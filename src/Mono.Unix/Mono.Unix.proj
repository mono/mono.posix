<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <NativeConfiguration>$(Configuration.ToLowerInvariant())</NativeConfiguration>
    <BuildDirTop>../../artifacts</BuildDirTop>

    <BeforePack>
      _GetNativeLibraries;
      $(BeforePack);
    </BeforePack>
  </PropertyGroup>

  <PropertyGroup>
    <_LinuxLibraryPrefix>lib</_LinuxLibraryPrefix>
    <_LinuxSharedNativeLibrarySuffix>so</_LinuxSharedNativeLibrarySuffix>
    <_LinuxStaticNativeLibrarySuffix>a</_LinuxStaticNativeLibrarySuffix>
    <_LinuxDebugNativeLibrarySuffix>$(_LinuxSharedNativeLibrarySuffix).debug</_LinuxDebugNativeLibrarySuffix>
    <_LinuxHasDebugNativeLibrary>true</_LinuxHasDebugNativeLibrary>
  </PropertyGroup>

  <PropertyGroup>
    <_DarwinLibraryPrefix>lib</_DarwinLibraryPrefix>
    <_DarwinSharedNativeLibrarySuffix>dylib</_DarwinSharedNativeLibrarySuffix>
    <_DarwinStaticNativeLibrarySuffix>a</_DarwinStaticNativeLibrarySuffix>
    <_DarwinDebugNativeLibrarySuffix></_DarwinDebugNativeLibrarySuffix>
    <_DarwinHasDebugNativeLibrary>false</_DarwinHasDebugNativeLibrary>
  </PropertyGroup>

  <ItemGroup>
    <_NativeLib Include="host-linux-x64" Condition=" '$([MSBuild]::IsOSPlatform(Linux))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>linux-x64</RuntimeIdentifier>
      <LibraryPrefix>$(_LinuxLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_LinuxSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_LinuxStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_LinuxDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_LinuxHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="host-linux-arm64" Condition=" '$([MSBuild]::IsOSPlatform(Linux))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>linux-arm64</RuntimeIdentifier>
      <LibraryPrefix>$(_LinuxLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_LinuxSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_LinuxStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_LinuxDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_LinuxHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="host-linux-arm" Condition=" '$([MSBuild]::IsOSPlatform(Linux))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>linux-arm</RuntimeIdentifier>
      <LibraryPrefix>$(_LinuxLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_LinuxSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_LinuxStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_LinuxDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_LinuxHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="host-darwin-x64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>osx-x64</RuntimeIdentifier>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="host-darwin-arm64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>osx-arm64</RuntimeIdentifier>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="android-arm32" Condition=" '$([MSBuild]::IsOSPlatform(Linux))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>android-arm</RuntimeIdentifier>
      <LibraryPrefix>$(_LinuxLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_LinuxSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_LinuxStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_LinuxDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_LinuxHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="android-arm64" Condition=" '$([MSBuild]::IsOSPlatform(Linux))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>android-arm64</RuntimeIdentifier>
      <LibraryPrefix>$(_LinuxLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_LinuxSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_LinuxStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_LinuxDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_LinuxHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="android-x86" Condition=" '$([MSBuild]::IsOSPlatform(Linux))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>android-x86</RuntimeIdentifier>
      <LibraryPrefix>$(_LinuxLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_LinuxSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_LinuxStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_LinuxDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_LinuxHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="android-x64" Condition=" '$([MSBuild]::IsOSPlatform(Linux))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>android-x64</RuntimeIdentifier>
      <LibraryPrefix>$(_LinuxLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_LinuxSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_LinuxStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_LinuxDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_LinuxHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>true</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="catalyst-arm64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true'">
      <RuntimeIdentifier>maccatalyst-arm64</RuntimeIdentifier>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="catalyst-x64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>maccatalyst-x64</RuntimeIdentifier>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="ios-arm64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>ios-arm64</RuntimeIdentifier>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="ios-armv7" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>ios-arm</RuntimeIdentifier>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="ios-armv7s" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>ios-armv7s</RuntimeIdentifier> <!-- TODO: this needs to be a fat binary -->
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="ios-simarm64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>iossimulator-arm64</RuntimeIdentifier>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="ios-simx64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>iossimulator-x64</RuntimeIdentifier>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="tvos-arm64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>tvos-arm64</RuntimeIdentifier>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>

    <_NativeLib Include="tvos-simx64" Condition=" '$([MSBuild]::IsOSPlatform(OSX))' == 'true' or '$(PackageAllNativeLibs)' == 'true' ">
      <RuntimeIdentifier>tvossimulator-x64</RuntimeIdentifier>
      <LibraryPrefix>$(_DarwinLibraryPrefix)</LibraryPrefix>
      <SharedSuffix>$(_DarwinSharedNativeLibrarySuffix)</SharedSuffix>
      <StaticSuffix>$(_DarwinStaticNativeLibrarySuffix)</StaticSuffix>
      <DebugSuffix>$(_DarwinDebugNativeLibrarySuffix)</DebugSuffix>
      <HasDebugLibrary>$(_DarwinHasDebugNativeLibrary)</HasDebugLibrary>
      <HasSharedLibrary>false</HasSharedLibrary>
    </_NativeLib>
  </ItemGroup>

  <ItemGroup>
    <_NativeLib Update="@(_NativeLib)"
                RuntimesPackagePath="runtimes/%(_NativeLib.RuntimeIdentifier)/native"
                AuxPackagePath="aux/%(_NativeLib.RuntimeIdentifier)/native" />

    <!--
    For RIDs that *don't* support shared libraries, we want to put the static
    library into `runtimes/<rid>/native/`.

    For RIDs that *do* support shared libraries, we want to instead put the
    shared library into `runtimes/<rid>/native/` and the static library into
    `aux/<rid>/native/`.

    Debug symbols, if available, always go into `aux/<rid>/native/`.

    The idea is to avoid putting files into `runtimes/<rid>/native/` if they
    aren't actually needed by `dotnet publish` for that `<rid>`. This is because
    the publish logic isn't smart enough to figure out that it should exclude
    e.g. static libraries when publishing for a RID that supports shared
    libraries.
    -->

    <_NativeLib Update="@(_NativeLib->WithMetadataValue('HasSharedLibrary', 'false'))"
                StaticPackagePath="%(_NativeLib.RuntimesPackagePath)" />

    <_NativeLib Update="@(_NativeLib->WithMetadataValue('HasSharedLibrary', 'true'))"
                SharedPackagePath="%(_NativeLib.RuntimesPackagePath)"
                StaticPackagePath="%(_NativeLib.AuxPackagePath)" />

    <_NativeLib Update="@(_NativeLib->WithMetadataValue('HasDebugLibrary', 'true'))"
                DebugPackagePath="%(_NativeLib.AuxPackagePath)" />
  </ItemGroup>

  <Target Name="_GetNativeLibraries">
    <ItemGroup>
      <Content Include="$(BuildDirTop)/%(_NativeLib.Identity)-$(NativeConfiguration)/lib/%(_NativeLib.LibraryPrefix)Mono.Unix.%(_NativeLib.StaticSuffix)">
        <PackagePath>%(_NativeLib.StaticPackagePath)</PackagePath>
      </Content>

      <Content Include="$(BuildDirTop)/%(_NativeLib.Identity)-$(NativeConfiguration)/lib/%(_NativeLib.LibraryPrefix)Mono.Unix.%(_NativeLib.SharedSuffix)"
               Condition=" '%(_NativeLib.HasSharedLibrary)' == 'true' ">
        <PackagePath>%(_NativeLib.SharedPackagePath)</PackagePath>
      </Content>

      <Content Include="$(BuildDirTop)/%(_NativeLib.Identity)-$(NativeConfiguration)/lib/%(_NativeLib.LibraryPrefix)Mono.Unix.%(_NativeLib.DebugSuffix)"
               Condition=" '%(_NativeLib.HasDebugLibrary)' == 'true' ">
        <PackagePath>%(_NativeLib.DebugPackagePath)</PackagePath>
      </Content>
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);_IncludeDllConfigInNuGetPackage</TargetsForTfmSpecificContentInPackage>
  </PropertyGroup>
  <Target Name="_IncludeDllConfigInNuGetPackage">
    <GetNuGetShortFolderName
        TargetFrameworkMoniker="$(TargetFrameworkMoniker)"
        TargetPlatformMoniker="$(TargetPlatformMoniker)">
      <Output TaskParameter="NuGetShortFolderName" PropertyName="_NuGetShortFolderName" />
    </GetNuGetShortFolderName>
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(MSBuildThisFileDirectory)Mono.Unix.dll.config">
        <PackagePath>lib/$(_NuGetShortFolderName)</PackagePath>
      </TfmSpecificPackageFile>
    </ItemGroup>
  </Target>

  <ItemGroup>
    <Content Include="$(MSBuildThisFileDirectory)Mono.Unix.targets">
      <PackagePath>build</PackagePath>
    </Content>
  </ItemGroup>
</Project>
